/**
 *
 * filters the array with a FileMaker expression
 *
 * @param {array} array the array to filter
 * @param {string} expression the FileMaker expression to use for the filter
 *
 * @returns {array}
 * 
 * @package JSON - Extensions to the Native JSON Functions
 *
 * @author todd@geistinteractive.com
 * @version 20170401
 *
 */


Let(
[

// start a newArray if one is already in place
$newArray = Case ( IsEmpty ($newArray) ; "[]" ; $newArray );

notValid = Left(JSONFormatElements(array);1) = "?" ;
c = ValueCount( JSONListValues ( array ; "" ));

// store the current item in a var so it can be used in the expression
$item = JSONGetElement ( array ;  0  );

//evaluate the expresion
passed = GetAsBoolean(  Evaluate( expression )  );


// add thisItem to the new array if it passes
n = ValueCount( JSONListValues ( $newArray ; "" ));
$newArray  = Case ( passed and c >0 ; JSONSetElement ( $newArray; n ; $item ; "") ; $newArray ) ;

//update the array for use in the next round
array  = JSONDeleteElement(array ;0 ) ;

//clear this for the next round
$item = ""

];
    Case(

	c < 1 or notValid    ; $newArray &  Let($newArray=""; "" ); // return the newArray and clear the var
      	JSON.FilterByExpression (array ; expression )
        
        
)

)