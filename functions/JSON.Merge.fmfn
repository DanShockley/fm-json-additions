/**
 *
 * merges two json objects together
 *
 * @param {object} target the object to merge into
 * @param {object} source the object to merge properties for
 *
 * @returns {object}
 * 
 * @package JSON - Extensions to the Native JSON Functions
 *
 * @author todd@geistinteractive.com
 * @version 20170516
 *
 */


Let(
[

sourceKeys = JSONListKeys ( source ; "" );
targetKeys = JSONListKeys ( target ; "" )

];
Case(

	//look for error ans exit
	Left(sourceKeys; 1) = "?" ; sourceKeys & " In Source.";
	Left(targetKeys; 1) = "?" ; targetKeys  & " In Target." ;
	Left(  JSONGetElement (source ; "" )  ;1) = "[" ; "? * Array in Source. Must be an object" ;

	// look for the last recusion  and exit
	ValueCount(sourceKeys) < 1  ; target ; // done

 
	Let(
	[

       // merge this rounds key into the target
	thisKey = GetValue(sourceKeys ; 1 );
	thisValue = JSONGetElement( source; thisKey );
	firstChar = Left(thisValue; 1);
	needToCheckForNumber = Filter(firstChar ; "0123456789") = firstChar ; 
	JSONType = If( needToCheckForNumber and GetAsText(thisValue) <> GetAsNumber(thisValue)  ; JSONString ; "") ;

        newTarget = JSONSetElement ( target ; thisKey ; thisValue ; JSONType );

	// remove this rounds key from the source
	newSource = JSONDeleteElement ( source ; thisKey )
	]; 

	// repeat
	JSON.Merge(newTarget ; newSource ) 
       ) 
)

)